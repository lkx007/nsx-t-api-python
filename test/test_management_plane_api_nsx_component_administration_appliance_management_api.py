# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 2.5.1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.management_plane_api_nsx_component_administration_appliance_management_api import ManagementPlaneApiNsxComponentAdministrationApplianceManagementApi  # noqa: E501
from swagger_client.rest import ApiException


class TestManagementPlaneApiNsxComponentAdministrationApplianceManagementApi(unittest.TestCase):
    """ManagementPlaneApiNsxComponentAdministrationApplianceManagementApi unit test stubs"""

    def setUp(self):
        self.api = api.management_plane_api_nsx_component_administration_appliance_management_api.ManagementPlaneApiNsxComponentAdministrationApplianceManagementApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_node_user_ssh_key_add_ssh_key(self):
        """Test case for add_node_user_ssh_key_add_ssh_key

        Add SSH public key to authorized_keys file for node user  # noqa: E501
        """
        pass

    def test_cancel_appliance_management_task_cancel(self):
        """Test case for cancel_appliance_management_task_cancel

        Cancel specified task  # noqa: E501
        """
        pass

    def test_check_rabbit_mq_management_port(self):
        """Test case for check_rabbit_mq_management_port

        Check if RabbitMQ management port is enabled or not  # noqa: E501
        """
        pass

    def test_collect_alarms(self):
        """Test case for collect_alarms

        Collect alarms from all NSX nodes  # noqa: E501
        """
        pass

    def test_collect_audit_logs(self):
        """Test case for collect_audit_logs

        Collect audit logs from registered manager nodes  # noqa: E501
        """
        pass

    def test_collect_support_bundles_collect(self):
        """Test case for collect_support_bundles_collect

        Collect support bundles from registered cluster and fabric nodes  # noqa: E501
        """
        pass

    def test_copy_from_remote_file_copy_from_remote_file(self):
        """Test case for copy_from_remote_file_copy_from_remote_file

        Copy a remote file to the file store  # noqa: E501
        """
        pass

    def test_copy_to_remote_file_copy_to_remote_file(self):
        """Test case for copy_to_remote_file_copy_to_remote_file

        Copy file in the file store to a remote file store  # noqa: E501
        """
        pass

    def test_create_appliance_management_service_action_restart(self):
        """Test case for create_appliance_management_service_action_restart

        Restart the node management service  # noqa: E501
        """
        pass

    def test_create_cluster_boot_manager_service_action_restart(self):
        """Test case for create_cluster_boot_manager_service_action_restart

        Restart, start or stop the cluster boot manager service  # noqa: E501
        """
        pass

    def test_create_cluster_boot_manager_service_action_start(self):
        """Test case for create_cluster_boot_manager_service_action_start

        Restart, start or stop the cluster boot manager service  # noqa: E501
        """
        pass

    def test_create_cluster_boot_manager_service_action_stop(self):
        """Test case for create_cluster_boot_manager_service_action_stop

        Restart, start or stop the cluster boot manager service  # noqa: E501
        """
        pass

    def test_create_cminventory_service_action_restart(self):
        """Test case for create_cminventory_service_action_restart

        Restart, start or stop the manager service  # noqa: E501
        """
        pass

    def test_create_cminventory_service_action_start(self):
        """Test case for create_cminventory_service_action_start

        Restart, start or stop the manager service  # noqa: E501
        """
        pass

    def test_create_cminventory_service_action_stop(self):
        """Test case for create_cminventory_service_action_stop

        Restart, start or stop the manager service  # noqa: E501
        """
        pass

    def test_create_controller_server_service_action_restart(self):
        """Test case for create_controller_server_service_action_restart

        Restart, start or stop the controller service  # noqa: E501
        """
        pass

    def test_create_controller_server_service_action_start(self):
        """Test case for create_controller_server_service_action_start

        Restart, start or stop the controller service  # noqa: E501
        """
        pass

    def test_create_controller_server_service_action_stop(self):
        """Test case for create_controller_server_service_action_stop

        Restart, start or stop the controller service  # noqa: E501
        """
        pass

    def test_create_file(self):
        """Test case for create_file

        Upload a file to the file store  # noqa: E501
        """
        pass

    def test_create_liagent_service_action_restart(self):
        """Test case for create_liagent_service_action_restart

        Restart, start or stop the liagent service  # noqa: E501
        """
        pass

    def test_create_liagent_service_action_start(self):
        """Test case for create_liagent_service_action_start

        Restart, start or stop the liagent service  # noqa: E501
        """
        pass

    def test_create_liagent_service_action_stop(self):
        """Test case for create_liagent_service_action_stop

        Restart, start or stop the liagent service  # noqa: E501
        """
        pass

    def test_create_migration_coordinator_service_action_restart(self):
        """Test case for create_migration_coordinator_service_action_restart

        Restart, start or stop the migration coordinator service  # noqa: E501
        """
        pass

    def test_create_migration_coordinator_service_action_start(self):
        """Test case for create_migration_coordinator_service_action_start

        Restart, start or stop the migration coordinator service  # noqa: E501
        """
        pass

    def test_create_migration_coordinator_service_action_stop(self):
        """Test case for create_migration_coordinator_service_action_stop

        Restart, start or stop the migration coordinator service  # noqa: E501
        """
        pass

    def test_create_node_network_route(self):
        """Test case for create_node_network_route

        Create node network route  # noqa: E501
        """
        pass

    def test_create_node_stats_service_action_restart(self):
        """Test case for create_node_stats_service_action_restart

        Restart, start or stop the NSX node-stats service  # noqa: E501
        """
        pass

    def test_create_node_stats_service_action_start(self):
        """Test case for create_node_stats_service_action_start

        Restart, start or stop the NSX node-stats service  # noqa: E501
        """
        pass

    def test_create_node_stats_service_action_stop(self):
        """Test case for create_node_stats_service_action_stop

        Restart, start or stop the NSX node-stats service  # noqa: E501
        """
        pass

    def test_create_nsx_message_bus_service_action_restart(self):
        """Test case for create_nsx_message_bus_service_action_restart

        Restart, start or stop the NSX Message Bus service  # noqa: E501
        """
        pass

    def test_create_nsx_message_bus_service_action_start(self):
        """Test case for create_nsx_message_bus_service_action_start

        Restart, start or stop the NSX Message Bus service  # noqa: E501
        """
        pass

    def test_create_nsx_message_bus_service_action_stop(self):
        """Test case for create_nsx_message_bus_service_action_stop

        Restart, start or stop the NSX Message Bus service  # noqa: E501
        """
        pass

    def test_create_nsx_ui_service_service_action_restart(self):
        """Test case for create_nsx_ui_service_service_action_restart

        Restart, Start and Stop the ui service  # noqa: E501
        """
        pass

    def test_create_nsx_ui_service_service_action_start(self):
        """Test case for create_nsx_ui_service_service_action_start

        Restart, Start and Stop the ui service  # noqa: E501
        """
        pass

    def test_create_nsx_ui_service_service_action_stop(self):
        """Test case for create_nsx_ui_service_service_action_stop

        Restart, Start and Stop the ui service  # noqa: E501
        """
        pass

    def test_create_nsx_upgrade_agent_service_action_restart(self):
        """Test case for create_nsx_upgrade_agent_service_action_restart

        Restart, start or stop the NSX upgrade agent service  # noqa: E501
        """
        pass

    def test_create_nsx_upgrade_agent_service_action_start(self):
        """Test case for create_nsx_upgrade_agent_service_action_start

        Restart, start or stop the NSX upgrade agent service  # noqa: E501
        """
        pass

    def test_create_nsx_upgrade_agent_service_action_stop(self):
        """Test case for create_nsx_upgrade_agent_service_action_stop

        Restart, start or stop the NSX upgrade agent service  # noqa: E501
        """
        pass

    def test_create_ntp_service_action_restart(self):
        """Test case for create_ntp_service_action_restart

        Restart, start or stop the NTP service  # noqa: E501
        """
        pass

    def test_create_ntp_service_action_start(self):
        """Test case for create_ntp_service_action_start

        Restart, start or stop the NTP service  # noqa: E501
        """
        pass

    def test_create_ntp_service_action_stop(self):
        """Test case for create_ntp_service_action_stop

        Restart, start or stop the NTP service  # noqa: E501
        """
        pass

    def test_create_phonehome_coordinator_service_action_restart(self):
        """Test case for create_phonehome_coordinator_service_action_restart

        Restart, start or stop Telemetry service  # noqa: E501
        """
        pass

    def test_create_phonehome_coordinator_service_action_start(self):
        """Test case for create_phonehome_coordinator_service_action_start

        Restart, start or stop Telemetry service  # noqa: E501
        """
        pass

    def test_create_phonehome_coordinator_service_action_stop(self):
        """Test case for create_phonehome_coordinator_service_action_stop

        Restart, start or stop Telemetry service  # noqa: E501
        """
        pass

    def test_create_platform_client_service_action_restart(self):
        """Test case for create_platform_client_service_action_restart

        Restart, start or stop the NSX Platform Client service  # noqa: E501
        """
        pass

    def test_create_platform_client_service_action_start(self):
        """Test case for create_platform_client_service_action_start

        Restart, start or stop the NSX Platform Client service  # noqa: E501
        """
        pass

    def test_create_platform_client_service_action_stop(self):
        """Test case for create_platform_client_service_action_stop

        Restart, start or stop the NSX Platform Client service  # noqa: E501
        """
        pass

    def test_create_policy_service_action_restart(self):
        """Test case for create_policy_service_action_restart

        Restart, start or stop the service  # noqa: E501
        """
        pass

    def test_create_policy_service_action_start(self):
        """Test case for create_policy_service_action_start

        Restart, start or stop the service  # noqa: E501
        """
        pass

    def test_create_policy_service_action_stop(self):
        """Test case for create_policy_service_action_stop

        Restart, start or stop the service  # noqa: E501
        """
        pass

    def test_create_proton_service_action_restart(self):
        """Test case for create_proton_service_action_restart

        Restart, start or stop the service  # noqa: E501
        """
        pass

    def test_create_proton_service_action_start(self):
        """Test case for create_proton_service_action_start

        Restart, start or stop the service  # noqa: E501
        """
        pass

    def test_create_proton_service_action_stop(self):
        """Test case for create_proton_service_action_stop

        Restart, start or stop the service  # noqa: E501
        """
        pass

    def test_create_proxy_service_action_restart(self):
        """Test case for create_proxy_service_action_restart

        Restart the http service  # noqa: E501
        """
        pass

    def test_create_proxy_service_action_start(self):
        """Test case for create_proxy_service_action_start

        Start the http service  # noqa: E501
        """
        pass

    def test_create_proxy_service_action_stop(self):
        """Test case for create_proxy_service_action_stop

        Stop the http service  # noqa: E501
        """
        pass

    def test_create_proxy_service_apply_certificate_action_apply_certificate(self):
        """Test case for create_proxy_service_apply_certificate_action_apply_certificate

        Update http service certificate  # noqa: E501
        """
        pass

    def test_create_rabbit_mq_service_action_restart(self):
        """Test case for create_rabbit_mq_service_action_restart

        Restart, start or stop the Rabbit MQ service  # noqa: E501
        """
        pass

    def test_create_rabbit_mq_service_action_start(self):
        """Test case for create_rabbit_mq_service_action_start

        Restart, start or stop the Rabbit MQ service  # noqa: E501
        """
        pass

    def test_create_rabbit_mq_service_action_stop(self):
        """Test case for create_rabbit_mq_service_action_stop

        Restart, start or stop the Rabbit MQ service  # noqa: E501
        """
        pass

    def test_create_remote_directory_create_remote_directory(self):
        """Test case for create_remote_directory_create_remote_directory

        Create directory in remote file server  # noqa: E501
        """
        pass

    def test_create_repository_service_action_restart(self):
        """Test case for create_repository_service_action_restart

        Restart, start or stop the NSX install-upgrade service  # noqa: E501
        """
        pass

    def test_create_repository_service_action_start(self):
        """Test case for create_repository_service_action_start

        Restart, start or stop the NSX install-upgrade service  # noqa: E501
        """
        pass

    def test_create_repository_service_action_stop(self):
        """Test case for create_repository_service_action_stop

        Restart, start or stop the NSX install-upgrade service  # noqa: E501
        """
        pass

    def test_create_search_service_action_restart(self):
        """Test case for create_search_service_action_restart

        Restart, start or stop the NSX Search service  # noqa: E501
        """
        pass

    def test_create_search_service_action_start(self):
        """Test case for create_search_service_action_start

        Restart, start or stop the NSX Search service  # noqa: E501
        """
        pass

    def test_create_search_service_action_stop(self):
        """Test case for create_search_service_action_stop

        Restart, start or stop the NSX Search service  # noqa: E501
        """
        pass

    def test_create_snmp_service_action_restart(self):
        """Test case for create_snmp_service_action_restart

        Restart, start or stop the SNMP service  # noqa: E501
        """
        pass

    def test_create_snmp_service_action_start(self):
        """Test case for create_snmp_service_action_start

        Restart, start or stop the SNMP service  # noqa: E501
        """
        pass

    def test_create_snmp_service_action_stop(self):
        """Test case for create_snmp_service_action_stop

        Restart, start or stop the SNMP service  # noqa: E501
        """
        pass

    def test_create_ssh_service_action_notify_mpa_restart(self):
        """Test case for create_ssh_service_action_notify_mpa_restart

        Restart, start or stop the ssh service  # noqa: E501
        """
        pass

    def test_create_ssh_service_action_notify_mpa_start(self):
        """Test case for create_ssh_service_action_notify_mpa_start

        Restart, start or stop the ssh service  # noqa: E501
        """
        pass

    def test_create_ssh_service_action_notify_mpa_stop(self):
        """Test case for create_ssh_service_action_notify_mpa_stop

        Restart, start or stop the ssh service  # noqa: E501
        """
        pass

    def test_create_ssh_service_action_restart(self):
        """Test case for create_ssh_service_action_restart

        Restart, start or stop the ssh service  # noqa: E501
        """
        pass

    def test_create_ssh_service_action_start(self):
        """Test case for create_ssh_service_action_start

        Restart, start or stop the ssh service  # noqa: E501
        """
        pass

    def test_create_ssh_service_action_stop(self):
        """Test case for create_ssh_service_action_stop

        Restart, start or stop the ssh service  # noqa: E501
        """
        pass

    def test_create_ssh_service_remove_host_fingerprint_action_remove_host_fingerprint(self):
        """Test case for create_ssh_service_remove_host_fingerprint_action_remove_host_fingerprint

        Remove a host's fingerprint from known hosts file  # noqa: E501
        """
        pass

    def test_create_syslog_service_action_restart(self):
        """Test case for create_syslog_service_action_restart

        Restart, start or stop the syslog service  # noqa: E501
        """
        pass

    def test_create_syslog_service_action_start(self):
        """Test case for create_syslog_service_action_start

        Restart, start or stop the syslog service  # noqa: E501
        """
        pass

    def test_create_syslog_service_action_stop(self):
        """Test case for create_syslog_service_action_stop

        Restart, start or stop the syslog service  # noqa: E501
        """
        pass

    def test_d_elete_rabbit_mq_management_port(self):
        """Test case for d_elete_rabbit_mq_management_port

        Delete RabbitMQ management port  # noqa: E501
        """
        pass

    def test_delete_appliance_management_task(self):
        """Test case for delete_appliance_management_task

        Delete task  # noqa: E501
        """
        pass

    def test_delete_file(self):
        """Test case for delete_file

        Delete file  # noqa: E501
        """
        pass

    def test_delete_node_network_route(self):
        """Test case for delete_node_network_route

        Delete node network route  # noqa: E501
        """
        pass

    def test_delete_node_syslog_exporter(self):
        """Test case for delete_node_syslog_exporter

        Delete node syslog exporter  # noqa: E501
        """
        pass

    def test_delete_node_user_ssh_key_remove_ssh_key(self):
        """Test case for delete_node_user_ssh_key_remove_ssh_key

        Remove SSH public key from authorized_keys file for node user  # noqa: E501
        """
        pass

    def test_delete_support_bundles_async_response_delete_async_response(self):
        """Test case for delete_support_bundles_async_response_delete_async_response

        Delete existing support bundles waiting to be downloaded  # noqa: E501
        """
        pass

    def test_get_controller_profiler_status(self):
        """Test case for get_controller_profiler_status

        Get the status (Enabled/Disabled) of controller profiler  # noqa: E501
        """
        pass

    def test_get_node_mandatory_access_control(self):
        """Test case for get_node_mandatory_access_control

        Gets the enable status for Mandatory Access Control  # noqa: E501
        """
        pass

    def test_get_node_mandatory_access_control_report(self):
        """Test case for get_node_mandatory_access_control_report

        Get the report for Mandatory Access Control  # noqa: E501
        """
        pass

    def test_invoke_delete_cluster_central_api(self):
        """Test case for invoke_delete_cluster_central_api

        Invoke DELETE request on target cluster node  # noqa: E501
        """
        pass

    def test_invoke_delete_fabric_central_api(self):
        """Test case for invoke_delete_fabric_central_api

        Invoke DELETE request on target fabric node  # noqa: E501
        """
        pass

    def test_invoke_delete_transport_node_central_api(self):
        """Test case for invoke_delete_transport_node_central_api

        Invoke DELETE request on target transport node  # noqa: E501
        """
        pass

    def test_invoke_get_cluster_central_api(self):
        """Test case for invoke_get_cluster_central_api

        Invoke GET request on target cluster node  # noqa: E501
        """
        pass

    def test_invoke_get_fabric_central_api(self):
        """Test case for invoke_get_fabric_central_api

        Invoke GET request on target fabric node  # noqa: E501
        """
        pass

    def test_invoke_get_transport_node_central_api(self):
        """Test case for invoke_get_transport_node_central_api

        Invoke GET request on target transport node  # noqa: E501
        """
        pass

    def test_invoke_post_cluster_central_api(self):
        """Test case for invoke_post_cluster_central_api

        Invoke POST request on target cluster node  # noqa: E501
        """
        pass

    def test_invoke_post_fabric_central_api(self):
        """Test case for invoke_post_fabric_central_api

        Invoke POST request on target fabric node  # noqa: E501
        """
        pass

    def test_invoke_post_transport_node_central_api(self):
        """Test case for invoke_post_transport_node_central_api

        Invoke POST request on target transport node  # noqa: E501
        """
        pass

    def test_invoke_put_cluster_central_api(self):
        """Test case for invoke_put_cluster_central_api

        Invoke PUT request on target cluster node  # noqa: E501
        """
        pass

    def test_invoke_put_fabric_central_api(self):
        """Test case for invoke_put_fabric_central_api

        Invoke PUT request on target fabric node  # noqa: E501
        """
        pass

    def test_invoke_put_transport_node_central_api(self):
        """Test case for invoke_put_transport_node_central_api

        Invoke PUT request on target transport node  # noqa: E501
        """
        pass

    def test_list_appliance_management_tasks(self):
        """Test case for list_appliance_management_tasks

        List appliance management tasks  # noqa: E501
        """
        pass

    def test_list_files(self):
        """Test case for list_files

        List node files  # noqa: E501
        """
        pass

    def test_list_node_interfaces(self):
        """Test case for list_node_interfaces

        List the NSX Manager's Network Interfaces  # noqa: E501
        """
        pass

    def test_list_node_network_routes(self):
        """Test case for list_node_network_routes

        List node network routes  # noqa: E501
        """
        pass

    def test_list_node_processes(self):
        """Test case for list_node_processes

        List node processes  # noqa: E501
        """
        pass

    def test_list_node_services(self):
        """Test case for list_node_services

        List node services  # noqa: E501
        """
        pass

    def test_list_node_syslog_exporters(self):
        """Test case for list_node_syslog_exporters

        List node syslog exporters  # noqa: E501
        """
        pass

    def test_list_node_user_ssh_keys(self):
        """Test case for list_node_user_ssh_keys

        List SSH keys from authorized_keys file for node user  # noqa: E501
        """
        pass

    def test_list_node_users(self):
        """Test case for list_node_users

        List node users  # noqa: E501
        """
        pass

    def test_post_node_syslog_exporter(self):
        """Test case for post_node_syslog_exporter

        Add node syslog exporter  # noqa: E501
        """
        pass

    def test_read_appliance_management_service(self):
        """Test case for read_appliance_management_service

        Read appliance management service properties  # noqa: E501
        """
        pass

    def test_read_appliance_management_service_status(self):
        """Test case for read_appliance_management_service_status

        Read appliance management service status  # noqa: E501
        """
        pass

    def test_read_appliance_management_task_properties(self):
        """Test case for read_appliance_management_task_properties

        Read task properties  # noqa: E501
        """
        pass

    def test_read_appliance_node_status(self):
        """Test case for read_appliance_node_status

        Read node status  # noqa: E501
        """
        pass

    def test_read_async_appliance_management_task_response(self):
        """Test case for read_async_appliance_management_task_response

        Read asynchronous task response  # noqa: E501
        """
        pass

    def test_read_auth_provider_vidm(self):
        """Test case for read_auth_provider_vidm

        Read AAA provider vIDM properties  # noqa: E501
        """
        pass

    def test_read_auth_provider_vidm_status(self):
        """Test case for read_auth_provider_vidm_status

        Read AAA provider vIDM status  # noqa: E501
        """
        pass

    def test_read_cluster_boot_manager_service(self):
        """Test case for read_cluster_boot_manager_service

        Read cluster boot manager service properties  # noqa: E501
        """
        pass

    def test_read_cluster_boot_manager_service_status(self):
        """Test case for read_cluster_boot_manager_service_status

        Read cluster boot manager service status  # noqa: E501
        """
        pass

    def test_read_cminventory_service(self):
        """Test case for read_cminventory_service

        Read cm inventory service properties  # noqa: E501
        """
        pass

    def test_read_cminventory_service_status(self):
        """Test case for read_cminventory_service_status

        Read manager service status  # noqa: E501
        """
        pass

    def test_read_controller_server_certificate(self):
        """Test case for read_controller_server_certificate

        Read controller server certificate properties  # noqa: E501
        """
        pass

    def test_read_controller_server_service(self):
        """Test case for read_controller_server_service

        Read controller service properties  # noqa: E501
        """
        pass

    def test_read_controller_server_service_status(self):
        """Test case for read_controller_server_service_status

        Read controller service status  # noqa: E501
        """
        pass

    def test_read_file(self):
        """Test case for read_file

        Read file contents  # noqa: E501
        """
        pass

    def test_read_file_properties(self):
        """Test case for read_file_properties

        Read file properties  # noqa: E501
        """
        pass

    def test_read_file_thumbprint(self):
        """Test case for read_file_thumbprint

        Read file thumbprint  # noqa: E501
        """
        pass

    def test_read_liagent_service(self):
        """Test case for read_liagent_service

        Read liagent service properties  # noqa: E501
        """
        pass

    def test_read_liagent_service_status(self):
        """Test case for read_liagent_service_status

        Read liagent service status  # noqa: E501
        """
        pass

    def test_read_migration_coordinator_service(self):
        """Test case for read_migration_coordinator_service

        Read migration coordinator service properties  # noqa: E501
        """
        pass

    def test_read_migration_coordinator_service_status(self):
        """Test case for read_migration_coordinator_service_status

        Read migration coordinator service status  # noqa: E501
        """
        pass

    def test_read_network_interface_statistics(self):
        """Test case for read_network_interface_statistics

        Read the NSX Manager's Network Interface Statistics  # noqa: E501
        """
        pass

    def test_read_network_properties(self):
        """Test case for read_network_properties

        Read network configuration properties  # noqa: E501
        """
        pass

    def test_read_node_interface(self):
        """Test case for read_node_interface

        Read the NSX Manager's Network Interface  # noqa: E501
        """
        pass

    def test_read_node_name_servers(self):
        """Test case for read_node_name_servers

        Read the NSX Manager's Name Servers  # noqa: E501
        """
        pass

    def test_read_node_network_route(self):
        """Test case for read_node_network_route

        Read node network route  # noqa: E501
        """
        pass

    def test_read_node_process(self):
        """Test case for read_node_process

        Read node process  # noqa: E501
        """
        pass

    def test_read_node_properties(self):
        """Test case for read_node_properties

        Read node properties  # noqa: E501
        """
        pass

    def test_read_node_search_domains(self):
        """Test case for read_node_search_domains

        Read the NSX Manager's Search Domains  # noqa: E501
        """
        pass

    def test_read_node_stats_service(self):
        """Test case for read_node_stats_service

        Read NSX node-stats service properties  # noqa: E501
        """
        pass

    def test_read_node_stats_service_status(self):
        """Test case for read_node_stats_service_status

        Read NSX node-stats service status  # noqa: E501
        """
        pass

    def test_read_node_support_bundle(self):
        """Test case for read_node_support_bundle

        Read node support bundle  # noqa: E501
        """
        pass

    def test_read_node_syslog_exporter(self):
        """Test case for read_node_syslog_exporter

        Read node syslog exporter  # noqa: E501
        """
        pass

    def test_read_node_user(self):
        """Test case for read_node_user

        Read node user  # noqa: E501
        """
        pass

    def test_read_node_version(self):
        """Test case for read_node_version

        Read node version  # noqa: E501
        """
        pass

    def test_read_nsx_message_bus_service(self):
        """Test case for read_nsx_message_bus_service

        Read NSX Message Bus service properties  # noqa: E501
        """
        pass

    def test_read_nsx_message_bus_service_status(self):
        """Test case for read_nsx_message_bus_service_status

        Read NSX Message Bus service status  # noqa: E501
        """
        pass

    def test_read_nsx_ui_service_service(self):
        """Test case for read_nsx_ui_service_service

        Read ui service properties  # noqa: E501
        """
        pass

    def test_read_nsx_ui_service_service_status(self):
        """Test case for read_nsx_ui_service_service_status

        Read ui service status  # noqa: E501
        """
        pass

    def test_read_nsx_upgrade_agent_service(self):
        """Test case for read_nsx_upgrade_agent_service

        Read NSX upgrade Agent service properties  # noqa: E501
        """
        pass

    def test_read_nsx_upgrade_agent_service_status(self):
        """Test case for read_nsx_upgrade_agent_service_status

        Read Nsx upgrade agent service status  # noqa: E501
        """
        pass

    def test_read_ntp_service(self):
        """Test case for read_ntp_service

        Read NTP service properties  # noqa: E501
        """
        pass

    def test_read_ntp_service_status(self):
        """Test case for read_ntp_service_status

        Read NTP service status  # noqa: E501
        """
        pass

    def test_read_phonehome_coordinator_service(self):
        """Test case for read_phonehome_coordinator_service

        Read Telemetry service properties  # noqa: E501
        """
        pass

    def test_read_phonehome_coordinator_service_status(self):
        """Test case for read_phonehome_coordinator_service_status

        Read Telemetry service status  # noqa: E501
        """
        pass

    def test_read_platform_client_service(self):
        """Test case for read_platform_client_service

        Read NSX Platform Client service properties  # noqa: E501
        """
        pass

    def test_read_platform_client_service_status(self):
        """Test case for read_platform_client_service_status

        Read NSX Platform Client service status  # noqa: E501
        """
        pass

    def test_read_policy_service(self):
        """Test case for read_policy_service

        Read service properties  # noqa: E501
        """
        pass

    def test_read_policy_service_status(self):
        """Test case for read_policy_service_status

        Read service status  # noqa: E501
        """
        pass

    def test_read_proton_service(self):
        """Test case for read_proton_service

        Read service properties  # noqa: E501
        """
        pass

    def test_read_proton_service_status(self):
        """Test case for read_proton_service_status

        Read service status  # noqa: E501
        """
        pass

    def test_read_proxy_service(self):
        """Test case for read_proxy_service

        Read http service properties  # noqa: E501
        """
        pass

    def test_read_proxy_service_status(self):
        """Test case for read_proxy_service_status

        Read http service status  # noqa: E501
        """
        pass

    def test_read_rabbit_mq_service(self):
        """Test case for read_rabbit_mq_service

        Read Rabbit MQ service properties  # noqa: E501
        """
        pass

    def test_read_rabbit_mq_service_status(self):
        """Test case for read_rabbit_mq_service_status

        Read Rabbit MQ service status  # noqa: E501
        """
        pass

    def test_read_repository_service(self):
        """Test case for read_repository_service

        Read NSX install-upgrade service properties  # noqa: E501
        """
        pass

    def test_read_repository_service_status(self):
        """Test case for read_repository_service_status

        Read NSX install-upgrade service status  # noqa: E501
        """
        pass

    def test_read_search_service(self):
        """Test case for read_search_service

        Read NSX Search service properties  # noqa: E501
        """
        pass

    def test_read_search_service_status(self):
        """Test case for read_search_service_status

        Read NSX Search service status  # noqa: E501
        """
        pass

    def test_read_snmp_service(self):
        """Test case for read_snmp_service

        Read SNMP service properties  # noqa: E501
        """
        pass

    def test_read_snmp_service_status(self):
        """Test case for read_snmp_service_status

        Read SNMP service status  # noqa: E501
        """
        pass

    def test_read_snmpv3_engine_id(self):
        """Test case for read_snmpv3_engine_id

        Read SNMP V3 Engine ID  # noqa: E501
        """
        pass

    def test_read_ssh_service(self):
        """Test case for read_ssh_service

        Read ssh service properties  # noqa: E501
        """
        pass

    def test_read_ssh_service_status(self):
        """Test case for read_ssh_service_status

        Read ssh service status  # noqa: E501
        """
        pass

    def test_read_syslog_service(self):
        """Test case for read_syslog_service

        Read syslog service properties  # noqa: E501
        """
        pass

    def test_read_syslog_service_status(self):
        """Test case for read_syslog_service_status

        Read syslog service status  # noqa: E501
        """
        pass

    def test_reset_policy_service_logging_level_action_reset_manager_logging_levels(self):
        """Test case for reset_policy_service_logging_level_action_reset_manager_logging_levels

        Reset the logging levels to default values  # noqa: E501
        """
        pass

    def test_reset_proton_service_logging_level_action_reset_manager_logging_levels(self):
        """Test case for reset_proton_service_logging_level_action_reset_manager_logging_levels

        Reset the logging levels to default values  # noqa: E501
        """
        pass

    def test_restart_or_shutdown_node_restart(self):
        """Test case for restart_or_shutdown_node_restart

        Restart or shutdown node  # noqa: E501
        """
        pass

    def test_restart_or_shutdown_node_shutdown(self):
        """Test case for restart_or_shutdown_node_shutdown

        Restart or shutdown node  # noqa: E501
        """
        pass

    def test_set_controller_profiler(self):
        """Test case for set_controller_profiler

        Enable or disable controller profiler  # noqa: E501
        """
        pass

    def test_set_node_mandatory_access_control(self):
        """Test case for set_node_mandatory_access_control

        Enable or disable  Mandatory Access Control  # noqa: E501
        """
        pass

    def test_set_rabbit_mq_management_port(self):
        """Test case for set_rabbit_mq_management_port

        Set RabbitMQ management port  # noqa: E501
        """
        pass

    def test_update_appliance_node_status_clear_bootup_error(self):
        """Test case for update_appliance_node_status_clear_bootup_error

        Update node status  # noqa: E501
        """
        pass

    def test_update_auth_provider_vidm(self):
        """Test case for update_auth_provider_vidm

        Update AAA provider vIDM properties  # noqa: E501
        """
        pass

    def test_update_file(self):
        """Test case for update_file

        Replace file contents  # noqa: E501
        """
        pass

    def test_update_node_interface(self):
        """Test case for update_node_interface

        Update the NSX Manager's Network Interface  # noqa: E501
        """
        pass

    def test_update_node_name_servers(self):
        """Test case for update_node_name_servers

        Update the NSX Manager's Name Servers  # noqa: E501
        """
        pass

    def test_update_node_properties(self):
        """Test case for update_node_properties

        Update node properties  # noqa: E501
        """
        pass

    def test_update_node_search_domains(self):
        """Test case for update_node_search_domains

        Update the NSX Manager's Search Domains  # noqa: E501
        """
        pass

    def test_update_node_user(self):
        """Test case for update_node_user

        Update node user  # noqa: E501
        """
        pass

    def test_update_ntp_service(self):
        """Test case for update_ntp_service

        Update NTP service properties  # noqa: E501
        """
        pass

    def test_update_policy_service(self):
        """Test case for update_policy_service

        Update service properties  # noqa: E501
        """
        pass

    def test_update_proton_service(self):
        """Test case for update_proton_service

        Update service properties  # noqa: E501
        """
        pass

    def test_update_proxy_service(self):
        """Test case for update_proxy_service

        Update http service properties  # noqa: E501
        """
        pass

    def test_update_repository_service(self):
        """Test case for update_repository_service

        Update NSX install-upgrade service properties  # noqa: E501
        """
        pass

    def test_update_snmp_service(self):
        """Test case for update_snmp_service

        Update SNMP service properties  # noqa: E501
        """
        pass

    def test_update_snmpv3_engine_id(self):
        """Test case for update_snmpv3_engine_id

        Update SNMP V3 Engine ID  # noqa: E501
        """
        pass

    def test_update_ssh_service(self):
        """Test case for update_ssh_service

        Update ssh service properties  # noqa: E501
        """
        pass

    def test_update_uc_state(self):
        """Test case for update_uc_state

        Update UC state properties  # noqa: E501
        """
        pass

    def test_verify_node_syslog_exporter_verify(self):
        """Test case for verify_node_syslog_exporter_verify

        Verify node syslog exporter  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
