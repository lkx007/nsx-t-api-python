# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 2.5.1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class AppProfileMemberAppsCsvRecord(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'app_profile_category': 'str',
        'display_name': 'str',
        'description': 'str',
        'member_apps': 'str',
        'app_profile_criteria': 'str'
    }
    if hasattr(CsvRecord, "swagger_types"):
        swagger_types.update(CsvRecord.swagger_types)

    attribute_map = {
        'app_profile_category': 'app_profile_category',
        'display_name': 'display_name',
        'description': 'description',
        'member_apps': 'member_apps',
        'app_profile_criteria': 'app_profile_criteria'
    }
    if hasattr(CsvRecord, "attribute_map"):
        attribute_map.update(CsvRecord.attribute_map)

    def __init__(self, app_profile_category=None, display_name=None, description=None, member_apps=None, app_profile_criteria=None, *args, **kwargs):  # noqa: E501
        """AppProfileMemberAppsCsvRecord - a model defined in Swagger"""  # noqa: E501
        self._app_profile_category = None
        self._display_name = None
        self._description = None
        self._member_apps = None
        self._app_profile_criteria = None
        self.discriminator = None
        if app_profile_category is not None:
            self.app_profile_category = app_profile_category
        if display_name is not None:
            self.display_name = display_name
        if description is not None:
            self.description = description
        if member_apps is not None:
            self.member_apps = member_apps
        if app_profile_criteria is not None:
            self.app_profile_criteria = app_profile_criteria
        CsvRecord.__init__(self, *args, **kwargs)

    @property
    def app_profile_category(self):
        """Gets the app_profile_category of this AppProfileMemberAppsCsvRecord.  # noqa: E501

        Category of the app profile, value could be any string that describes the profile  # noqa: E501

        :return: The app_profile_category of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :rtype: str
        """
        return self._app_profile_category

    @app_profile_category.setter
    def app_profile_category(self, app_profile_category):
        """Sets the app_profile_category of this AppProfileMemberAppsCsvRecord.

        Category of the app profile, value could be any string that describes the profile  # noqa: E501

        :param app_profile_category: The app_profile_category of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :type: str
        """

        self._app_profile_category = app_profile_category

    @property
    def display_name(self):
        """Gets the display_name of this AppProfileMemberAppsCsvRecord.  # noqa: E501

        Name of the app profile  # noqa: E501

        :return: The display_name of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AppProfileMemberAppsCsvRecord.

        Name of the app profile  # noqa: E501

        :param display_name: The display_name of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def description(self):
        """Gets the description of this AppProfileMemberAppsCsvRecord.  # noqa: E501

        Description of the app profile  # noqa: E501

        :return: The description of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AppProfileMemberAppsCsvRecord.

        Description of the app profile  # noqa: E501

        :param description: The description of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def member_apps(self):
        """Gets the member_apps of this AppProfileMemberAppsCsvRecord.  # noqa: E501

        Applications that are member of this app profile  # noqa: E501

        :return: The member_apps of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :rtype: str
        """
        return self._member_apps

    @member_apps.setter
    def member_apps(self, member_apps):
        """Sets the member_apps of this AppProfileMemberAppsCsvRecord.

        Applications that are member of this app profile  # noqa: E501

        :param member_apps: The member_apps of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :type: str
        """

        self._member_apps = member_apps

    @property
    def app_profile_criteria(self):
        """Gets the app_profile_criteria of this AppProfileMemberAppsCsvRecord.  # noqa: E501

        Criteria of the app profile, value could be any string or \"*\" (match any string)  # noqa: E501

        :return: The app_profile_criteria of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :rtype: str
        """
        return self._app_profile_criteria

    @app_profile_criteria.setter
    def app_profile_criteria(self, app_profile_criteria):
        """Sets the app_profile_criteria of this AppProfileMemberAppsCsvRecord.

        Criteria of the app profile, value could be any string or \"*\" (match any string)  # noqa: E501

        :param app_profile_criteria: The app_profile_criteria of this AppProfileMemberAppsCsvRecord.  # noqa: E501
        :type: str
        """

        self._app_profile_criteria = app_profile_criteria

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AppProfileMemberAppsCsvRecord, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AppProfileMemberAppsCsvRecord):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
